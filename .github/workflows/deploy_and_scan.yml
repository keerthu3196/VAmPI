name: CI Pipeline

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Build Docker image
        run: |
          docker build -t ${{ vars.DOCKER_USERNAME }}/${{ vars.DOCKER_REPO }}:latest .
          
      - name: Log in to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Push Docker image
        run: |
          docker push ${{ vars.DOCKER_USERNAME }}/${{ vars.DOCKER_REPO }}

      # Run the Docker container
      - name: Run Docker container
        run: docker run -d --name my-app-container ${{ vars.DOCKER_USERNAME }}/${{ vars.DOCKER_REPO }}:latest

      - name: Verify container status
        run: |
          docker ps -q --filter=name=my-app-container
          cp ${{github.workspace}}/openapi_specs/openapi3.yml ./

      - name: ZAP Scan
        uses: zaproxy/action-api-scan@v0.8.0
        with:
          token: ${{ secrets.TOKEN }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          format: openapi
          target: openapi3.yml
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-x zap-report.xml -a'
          
      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4
        with:
            name: zap-report
            path: report.xml
      #- name: ZAP API Scan
       # run:  docker run --network=host -v $(pwd):/zap/wrk/:rw -t zaproxy/zap-stable zap-api-scan.py -t openapi3.yml -f openapi -x api_report.xml
